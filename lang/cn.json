{
    "Steam Depot Online (SDO)": "Steam Depot Online (SDO)",
    "Progress": "进度",
    "Downloaded Manifests": "已下载清单",
    "Missing Library": "缺少库",
    "Pillow (PIL) library is not installed. Images will not be displayed in game details. Please install it using: pip install Pillow": "未安装Pillow (PIL) 库。游戏详情中将不会显示图像。请使用以下命令安装：pip install Pillow",
    "Load Error": "加载错误",
    "Failed to load repositories.json. Using empty list.": "加载 repositories.json 失败。使用空列表。",
    "Save Error": "保存错误",
    "Failed to save repositories.json.": "保存 repositories.json 失败。",
    "Encrypted Repositories:": "加密仓库：",
    "Select All": "全选",
    "Toggle selection for all Encrypted repositories.": "切换所有加密仓库的选择。",
    "Decrypted Repositories:": "解密仓库：",
    "Toggle selection for all Decrypted repositories.": "切换所有解密仓库的选择。",
    "Branch Repositories:": "分支仓库：",
    "Toggle selection for all Branch repositories.": "切换所有分支仓库的选择。",
    "Add Repo": "添加仓库",
    "Add a new GitHub repository to the list.": "将新的GitHub仓库添加到列表中。",
    "Delete Repo": "删除仓库",
    "Delete selected repositories from the list.": "从列表中删除选定的仓库。",
    "Settings": "设置",
    "Open application settings, including info, themes, and more.": "打开应用程序设置，包括信息、主题等。",
    "Output Folder": "输出文件夹",
    "Open the default download output folder where game zips are saved.": "打开默认下载输出文件夹，游戏zip文件将保存在此处。",
    "Strict Validation (Require Key.vdf / Non Branch Repo)": "严格验证（需要Key.vdf / 非分支仓库）",
    "When checked, for non-Branch repos, only downloads manifest files and attempts to extract keys if key.vdf/config.vdf is found. Key files are excluded from final zip. When unchecked, all files are downloaded, and key files are included.": "选中时，对于非分支仓库，仅下载清单文件，并尝试在找到key.vdf/config.vdf时提取密钥。密钥文件将被排除在最终的zip文件之外。未选中时，所有文件都会被下载，并且包括密钥文件。",
    "Enter Game Name or AppID:": "输入游戏名称或AppID：",
    "e.g. 123456 or Game Name": "例如：123456或游戏名称",
    "Enter a game name (e.g., 'Portal 2') or AppID (e.g., '620'). For batch download, enter multiple AppIDs separated by commas or newlines.": "输入游戏名称（例如，“Portal 2”）或AppID（例如，“620”）。对于批量下载，输入多个用逗号或换行符分隔的AppID。",
    "Paste": "粘贴",
    "Paste text from clipboard into the input field.": "将剪贴板中的文本粘贴到输入字段中。",
    "Search": "搜索",
    "Search for games matching the entered name or AppID.": "搜索与输入的名称或AppID匹配的游戏。",
    "Download": "下载",
    "Download manifests/data for the selected game or all entered AppIDs.": "下载所选游戏或所有输入的AppID的清单/数据。",
    "Select appid(s) to download:": "选择要下载的appid：",
    "Selected game in search results": "搜索结果中的选定游戏",
    "Download only the game selected from the search results (if any).": "仅下载从搜索结果中选择的游戏（如果有的话）。",
    "All AppIDs in input field": "输入字段中的所有AppID",
    "Download all AppIDs found in the 'Enter Game Name or AppID' field, ignoring search results. Useful for batch downloads.\nNote: If multiple AppIDs are entered, all will be downloaded sequentially, skipping individual game details.": "下载在“输入游戏名称或AppID”字段中找到的所有AppID，忽略搜索结果。对于批量下载很有用。\n注意：如果输入了多个AppID，所有AppID将按顺序下载，跳过单个游戏的详细信息。",
    "Search Results:": "搜索结果：",
    "Error": "错误",
    "File not found: {filepath}": "找不到文件：{filepath}",
    "Could not open path: {e}": "无法打开路径：{e}",
    "Error opening path {path_to_open}: {error}": "打开路径 {path_to_open} 时出错：{error}",
    "Paste Error": "粘贴错误",
    "Failed to paste from clipboard: {e}": "从剪贴板粘贴失败：{e}",
    "Pasted text from clipboard.": "已从剪贴板粘贴文本。",
    "Strict validation setting saved.": "严格验证设置已保存。",
    "Input Error": "输入错误",
    "Please enter a game name or AppID.": "请输入游戏名称或AppID。",
    "Multiple AppIDs detected. Automatically setting download mode to 'All AppIDs in input field'.": "检测到多个AppID。自动将下载模式设置为“输入字段中的所有AppID”。",
    "Cancelling previous search...": "正在取消之前的搜索...",
    "Steam app list loaded successfully.": "Steam应用程序列表加载成功。",
    "Initialization: Failed to load Steam app list (Status: {response_status}). Search by name may not work. You can still search by AppID.": "初始化：加载Steam应用程序列表失败（状态：{response_status}）。按名称搜索可能无法工作。您仍然可以按AppID搜索。",
    "Initialization: Error fetching Steam app list: {error}. Search by name may not work.": "初始化：获取Steam应用程序列表时出错：{error}。按名称搜索可能无法工作。",
    "Initialization: Failed to decode Steam app list response. Search by name may not work.": "初始化：解码Steam应用程序列表响应失败。按名称搜索可能无法工作。",
    "Initialization: Unexpected error loading Steam app list: {error}.": "初始化：加载Steam应用程序列表时出现意外错误：{error}。",
    "No game found or API error for AppID {appid_to_search}.": "未找到游戏或AppID {appid_to_search} 的API错误。",
    "Failed to fetch details for AppID {appid_to_search} (Status: {response_status}).": "获取AppID {appid_to_search} 的详细信息失败（状态：{response_status}）。",
    "Error fetching AppID {appid_to_search}: {error}": "获取AppID {appid_to_search} 时出错：{error}",
    "Failed to decode JSON for AppID {appid_to_search}.": "解码AppID {appid_to_search} 的JSON失败。",
    "Steam app list is not yet loaded. Please wait or try AppID.": "Steam应用程序列表尚未加载。请稍候或尝试使用AppID。",
    "\nName search cancelled.": "\n名称搜索已取消。",
    "Max results ({max_results}) reached. Please refine your search.": "已达到最大结果数（{max_results}）。请细化您的搜索。",
    "\nSearch cancelled by user action.": "\n搜索已被用户操作取消。",
    "\nNo matching games found. Please try another name or AppID.": "\n未找到匹配的游戏。请尝试其他名称或AppID。",
    "Unknown Game": "未知游戏",
    "\nSearch display cancelled.": "\n搜索显示已取消。",
    "Error loading capsule for {game_name}: {image_data_result}": "加载{game_name}的封面时出错：{image_data_result}",
    "Error creating capsule image for {appid}: {error}": "为{appid}创建封面图像时出错：{error}",
    "\nFound {len_games_found} game(s). Select one from the list above.": "\n找到{len_games_found}个游戏。请从上面的列表中选择一个。",
    "Selected game not found in mapping. This is unexpected.": "在映射中找不到选定的游戏。这是意外情况。",
    "Failed to download image (Status {response_status}): {url}": "下载图像失败（状态{response_status}）：{url}",
    "Error downloading image {url}: {error}": "下载图像{url}时出错：{error}",
    "Error processing image for UI: {error}": "处理UI图像时出错：{error}",
    "Could not retrieve valid data for AppID {appid} from Steam API.": "无法从Steam API获取AppID {appid}的有效数据。",
    "Failed to decode JSON for AppID {appid} details.": "解码AppID {appid}详情的JSON失败。",
    "Failed to fetch AppID {appid} details (Status: {status}).": "获取AppID {appid}详情失败（状态：{status}）。",
    "Error fetching AppID {appid} details: {error}": "获取AppID {appid}详情时出错：{error}",
    "Genres: ": "流派：",
    "Release Date: ": "发布日期：",
    "No detailed text information found for this game.": "未找到该游戏的详细文本信息。",
    "Repository Selection": "仓库选择",
    "Please select at least one repository.": "请至少选择一个仓库。",
    "Selection Error": "选择错误",
    "Please select a game first from search results.": "请先从搜索结果中选择一个游戏。",
    "Please enter valid AppIDs in the input field for batch download mode.": "请在输入字段中输入有效的AppID以进行批量下载模式。",
    "No AppIDs selected or found for download.": "未选择或找到要下载的AppID。",
    "Batch download process cancelled by user.": "批量下载过程已被用户取消。",
    "\n--- Downloading AppID: {current_appid} ({game_name}) - {index}/{total_appids} ---": "\n--- 正在下载AppID：{current_appid} ({game_name}) - {index}/{total_appids} ---",
    "\nDownload cancelled during processing of AppID {appid}.": "\n处理AppID {appid}时下载已取消。",
    "\nGenerated LUA unlock script: {lua_file_path}": "\n已生成LUA解锁脚本：{lua_file_path}",
    "\nFailed to write LUA script {lua_file_path}: {error}": "\n写入LUA脚本{lua_file_path}失败：{error}",
    "\nWarning: Strict validation was ON, but no decryption keys were found/extracted. LUA script will be minimal and game may not work.": "\n警告：严格验证已开启，但未找到/提取解密密钥。LUA脚本将是最小的，游戏可能无法运行。",
    "\nNotice: No decryption keys found/extracted (strict validation was OFF). All downloaded files (if any) are included. Game may not work without keys.": "\n通知：未找到/提取解密密钥（严格验证已关闭）。所有下载的文件（如果有的话）都已包含。游戏可能在没有密钥的情况下无法运行。",
    "\nSuccessfully processed and zipped non-Branch repo for AppID {appid} to {final_zip_path}": "\n成功处理并压缩了AppID {appid}的非分支仓库到{final_zip_path}",
    "\nDownload/processing failed for AppID {appid} (non-Branch). No files to package.": "\n下载/处理AppID {appid}（非分支）失败。没有要打包的文件。",
    "Problematic path was: {output_path_or_processing_dir}": "有问题的路径是：{output_path_or_processing_dir}",
    "\nBranch repository download successful for AppID {appid}.": "\n分支仓库下载成功，AppID {appid}。",
    "Output saved directly to: {output_path_or_processing_dir}": "输出直接保存到：{output_path_or_processing_dir}",
    "\nBranch repository download for AppID {appid} seems complete, but the expected zip file was not found or path was invalid.": "\nAppID {appid}的分支仓库下载似乎已完成，但未找到预期的zip文件或路径无效。",
    "\nBatch download process finished.": "\n批量下载过程已完成。",
    "\nDownload cancelled by user for: {path} from {url_short}": "\n用户已取消下载：{path}来自{url_short}",
    "\nDownload interrupted by user for: {path}": "\n用户已中断下载：{path}",
    "\nRetrying download cycle for: {path} (Cycle {attempt_plus_2}/{overall_attempts})": "\n正在重试下载周期：{path}（周期{attempt_plus_2}/{overall_attempts}）",
    "\nMaximum attempts exceeded for: {path}. File could not be downloaded.": "\n已超过{path}的最大尝试次数。无法下载文件。",
    "Manifest file {path} already exists. Using local version.": "清单文件{path}已存在。使用本地版本。",
    "Key/Config VDF file {path} already exists. Using local version for key extraction.": "密钥/配置VDF文件{path}已存在。使用本地版本进行密钥提取。",
    "Could not read existing local file {path}: {error}. Attempting fresh download.": "无法读取现有本地文件{path}：{error}。尝试重新下载。",
    "Downloading: {path} from repo {repo} (commit: {sha_short})": "正在下载：{path}来自仓库{repo}（提交：{sha_short}）",
    "\nFile downloaded and saved: {path}": "\n文件已下载并保存：{path}",
    "Extracted {new_keys_count} new decryption keys from {path}": "从{path}中提取了{new_keys_count}个新解密密钥",
    "Warning: No 'depots' section or section is empty in {path}.": "警告：{path}中没有“depots”部分或该部分为空。",
    "\nFailed to parse VDF content for {path}: {error}. This file may be malformed or not a standard VDF.": "\n解析{path}的VDF内容失败：{error}。此文件可能已损坏或不是标准VDF。",
    "\nFailed to download or find local file: {path}": "\n下载或查找本地文件失败：{path}",
    "\nFile processing interrupted by user for: {path}": "\n用户中断了{path}的文件处理。",
    "\nAn error occurred while processing file {path}: {error}": "\n处理文件{path}时出错：{error}",
    "Attempting to download branch zip (API): {url}": "尝试下载分支zip（API）：{url}",
    "(with token)": "（带令牌）",
    "(no token)": "（无令牌）",
    "Successfully started downloading branch zip for AppID {app_id} from {repo_full_name}.": "已成功开始从{repo_full_name}下载AppID {app_id}的分支zip。",
    "Finished downloading branch zip content for AppID {app_id} (Size: {size_kb:.2f} KB).": "已完成AppID {app_id}的分支zip内容下载（大小：{size_kb:.2f} KB）。",
    "Failed to download branch zip (Status: {status}) from {url}": "下载分支zip失败（状态：{status}）来自{url}",
    "Unauthorized. Check token permissions or if token is valid.": "未授权。检查令牌权限或令牌是否有效。",
    "Not Found. Ensure repository '{repo_full_name}' and branch '{app_id}' exist.": "未找到。请确保仓库'{repo_full_name}'和分支'{app_id}'存在。",
    "Network or Timeout error downloading branch zip from {url}: {error}": "从{url}下载分支zip时出现网络或超时错误：{error}",
    "Unexpected error fetching branch zip {url}: {error}": "获取分支zip {url}时出现意外错误：{error}",
    "\nInvalid AppID format for download: {app_id_input}. Expected numeric AppID.": "\n下载的AppID格式无效：{app_id_input}。需要数字AppID。",
    "Error creating base output directory {output_base_dir}: {error}": "创建基本输出目录{output_base_dir}时出错：{error}",
    "\nDownload process cancelled by user before processing repo: {repo_full_name}.": "\n用户在处理仓库{repo_full_name}之前取消了下载过程。",
    "Repository {repo_full_name} type not found in local list. Skipping.": "在本地列表中未找到仓库{repo_full_name}的类型。跳过。",
    "\nProcessing BRANCH repository: {repo_full_name} for AppID: {app_id}": "\n正在处理分支仓库：{repo_full_name}，AppID：{app_id}",
    "Branch ZIP already exists: {final_branch_zip_path}. Skipping download for this repo.": "分支ZIP已存在：{final_branch_zip_path}。跳过此仓库的下载。",
    "\nDownload cancelled during branch zip fetch from {repo_full_name}.": "\n在从{repo_full_name}获取分支zip时取消了下载。",
    "Successfully saved branch download from {repo_full_name} to {final_branch_zip_path}": "成功将分支下载从{repo_full_name}保存到{final_branch_zip_path}",
    "Failed to save downloaded branch zip to {final_branch_zip_path}: {error}": "保存下载的分支zip到{final_branch_zip_path}失败：{error}",
    "Failed to download content for branch repo {repo_full_name}, AppID {app_id}. Trying next selected repo.": "下载分支仓库{repo_full_name}的内容失败，AppID {app_id}。尝试下一个选定的仓库。",
    "Error creating temporary processing directory {processing_dir_non_branch}: {error}. Skipping repo {repo_full_name}.": "创建临时处理目录{processing_dir_non_branch}时出错：{error}。跳过仓库{repo_full_name}。",
    "\nSearching NON-BRANCH repository: {repo_full_name} for AppID: {app_id} (Type: {repo_type})": "\n正在搜索非分支仓库：{repo_full_name}，AppID：{app_id}（类型：{repo_type}）",
    "AppID {app_id} not found as a branch in {repo_full_name} (Status: {status}).": "在{repo_full_name}中未找到AppID {app_id}作为分支（状态：{status}）。",
    "Auth failed. Check token.": "认证失败。检查令牌。",
    "Branch likely does not exist.": "分支可能不存在。",
    "Trying next selected repo.": "尝试下一个选定的仓库。",
    "Invalid branch data (missing SHA or tree URL) for {repo_full_name}/{app_id}. Trying next selected repo.": "分支数据无效（缺少SHA或树URL）对于{repo_full_name}/{app_id}。尝试下一个选定的仓库。",
    "Failed to get file tree data for {repo_full_name}/{app_id} (Commit SHA: {sha}, Status: {status}). Trying next selected repo.": "获取{repo_full_name}/{app_id}的文件树数据失败（提交SHA：{sha}，状态：{status}）。尝试下一个选定的仓库。",
    "Warning: File tree for {repo_full_name}/{app_id} is TRUNCATED by GitHub API. Some files may be missed. Consider repos with smaller AppID branches.": "警告：GitHub API截断了{repo_full_name}/{app_id}的文件树。可能会遗漏一些文件。考虑使用AppID分支较小的仓库。",
    "No files found in tree for {repo_full_name}/{app_id} (Commit SHA: {sha}). Trying next selected repo.": "在{repo_full_name}/{app_id}的树中未找到文件（提交SHA：{sha}）。尝试下一个选定的仓库。",
    "STRICT MODE: Processing branch {app_id} in {repo_full_name} (Commit: {sha_short}, Date: {commit_date})": "严格模式：正在处理{repo_full_name}中的分支{app_id}（提交：{sha_short}，日期：{commit_date}）",
    "STRICT: Found potential key file '{key_short_name}' at: {actual_key_file_path}. Attempting to process.": "严格：在{actual_key_file_path}找到潜在的密钥文件'{key_short_name}'。尝试处理。",
    "STRICT: Successfully processed keys from '{actual_key_file_path}'.": "严格：成功处理了'{actual_key_file_path}'中的密钥。",
    "STRICT: No Key.vdf or Config.vdf found or processed successfully for keys in {repo_full_name}/{app_id}. This repo may not yield usable decryption data in strict mode. Manifests will still be downloaded if found.": "严格：在{repo_full_name}/{app_id}中未找到或成功处理Key.vdf或Config.vdf以获取密钥。此仓库在严格模式下可能无法产生可用的解密数据。如果找到，仍将下载清单。",
    "NON-STRICT MODE: Downloading all files from branch {app_id} in {repo_full_name} (Commit: {sha_short}, Date: {commit_date})": "非严格模式：正在从{repo_full_name}中的分支{app_id}下载所有文件（提交：{sha_short}，日期：{commit_date}）",
    "\nDownload cancelled during file processing of {repo_full_name}.": "\n在处理{repo_full_name}的文件时取消了下载。",
    "\nData successfully processed for AppID {app_id} from {repo_full_name}. (Commit Date: {commit_date})": "\n成功处理了来自{repo_full_name}的AppID {app_id}的数据。（提交日期：{commit_date}）",
    "AppID {app_id} could not be successfully processed from {repo_full_name} with current settings. Files in processing dir (if any) will be from this attempt. Trying next selected repo.": "无法使用当前设置成功处理来自{repo_full_name}的AppID {app_id}。处理目录中的文件（如果有的话）将来自此次尝试。尝试下一个选定的仓库。",
    "\nNetwork/API error while processing {repo_full_name}: {error}. Trying next selected repo.": "\n处理{repo_full_name}时出现网络/API错误：{error}。尝试下一个选定的仓库。",
    "\nProcessing interrupted by user for repository: {repo_full_name}": "\n用户中断了仓库{repo_full_name}的处理。",
    "\nDownload process terminated by user request.": "\n下载过程已应用户请求终止。",
    "\nAppID {app_id} ({game_name}) could not be successfully processed from ANY selected repository with current settings.": "\n无法使用当前设置从任何选定的仓库成功处理AppID {app_id} ({game_name})。",
    "Warning: Non-numeric depot ID prefix '{depot_id_str}' in manifest filename '{filename}'. Using 0 for sorting.": "警告：清单文件名'{filename}'中非数字的仓库ID前缀'{depot_id_str}'。使用0进行排序。",
    "Warning: Could not fully sort manifest files for LUA generation due to naming or error: {error}. LUA script might be sub-optimal.": "警告：由于命名或错误，无法完全对清单文件进行LUA生成排序：{error}。LUA脚本可能不够优化。",
    "Could not parse Manifest GID from filename: {manifest_filename}. setManifestid entry will be skipped.": "无法从文件名{manifest_filename}解析清单GID。将跳过setManifestid条目。",
    "Could not parse numeric DepotID from manifest filename: {manifest_filename}. Entry skipped.": "无法从清单文件名{manifest_filename}解析数字仓库ID。跳过条目。",
    "Processing directory {processing_dir} not found for zipping. Skipping zip creation.": "未找到用于压缩的处理目录{processing_dir}。跳过zip创建。",
    "Removed existing zip file: {final_zip_path} before creating new one.": "在创建新文件之前删除了现有的zip文件：{final_zip_path}。",
    "Error removing existing zip {final_zip_path}: {error}. Archiving may fail or append to old data.": "删除现有zip {final_zip_path}时出错：{error}。归档可能失败或附加到旧数据。",
    "Excluding '{file}' from final zip (Strict Validation is ON).": "从最终zip中排除'{file}'（严格验证已开启）。",
    "\nSuccessfully created outcome zip: {final_zip_path}": "\n成功创建结果zip：{final_zip_path}",
    "Temporary source folder {processing_dir} deleted successfully.": "临时源文件夹{processing_dir}已成功删除。",
    "Error deleting temporary source folder {processing_dir}: {error}. Please remove it manually.": "删除临时源文件夹{processing_dir}时出错：{error}。请手动删除它。",
    "Error creating zip file {final_zip_path}: {error}": "创建zip文件{final_zip_path}时出错：{error}",
    "An unexpected error occurred during zipping: {error}": "压缩过程中发生意外错误：{error}",
    "Quit": "退出",
    "Do you want to quit?": "您想退出吗？",
    "Invalid repository type specified for toggle: {repo_type_to_toggle}.": "指定的切换仓库类型无效：{repo_type_to_toggle}。",
    "No {repo_type_to_toggle} repositories found to toggle.": "未找到要切换的{repo_type_to_toggle}仓库。",
    "Selected": "已选中",
    "Deselected": "未选中",
    "{action_str} all {repo_type_to_toggle} repositories.": "{action_str}所有{repo_type_to_toggle}仓库。",
    "Add Repository": "添加仓库",
    "Repository Name (e.g., user/repo):": "仓库名称（例如，用户/仓库）：",
    "Repository Type:": "仓库类型：",
    "Add": "添加",
    "Add repository window is not available.": "添加仓库窗口不可用。",
    "Please enter the repository name.": "请输入仓库名称。",
    "Repository name must be in 'owner/repository' format (e.g., 'octocat/Hello-World') without spaces or leading/trailing slashes.": "仓库名称必须采用“所有者/仓库”格式（例如，“octocat/Hello-World”），不能有空格或前后斜杠。",
    "Repository '{repo_name}' already exists in your list.": "仓库'{repo_name}'已存在于您的列表中。",
    "Added repository: {repo_name} (Type: {repo_state})": "已添加仓库：{repo_name}（类型：{repo_state}）",
    "Please select at least one repository to delete by checking its box.": "请通过勾选其复选框至少选择一个要删除的仓库。",
    "Are you sure you want to delete these {len_repos_to_delete} repositories?\n\n- ": "您确定要删除这{len_repos_to_delete}个仓库吗？\n\n- ",
    "Confirm Deletion": "确认删除",
    "Deleted {deleted_count} repositories: {repos_to_delete_str}": "已删除{deleted_count}个仓库：{repos_to_delete_str}",
    "No matching repositories found in the internal list to delete. UI might be out of sync.": "在内部列表中未找到要删除的匹配仓库。UI可能不同步。",
    "Warning: Unknown repository type '{repo_type}' for '{repo_name}'. Assigning to Decrypted section for UI.": "警告：'{repo_name}'的未知仓库类型'{repo_type}'。为UI分配到解密部分。",
    "selected": "已选中",
    "deselected": "未选中",
    "Repository '{repo_name}' {action}.": "仓库'{repo_name}' {action}。",
    "General Settings": "常规设置",
    "Repositories": "仓库",
    "About": "关于",
    "Download Location:": "下载位置：",
    "Choose Folder": "选择文件夹",
    "Select the folder where downloaded games and manifests will be saved.": "选择下载的游戏和清单将保存到的文件夹。",
    "Appearance Mode:": "外观模式：",
    "Dark": "深色",
    "Light": "浅色",
    "System": "系统",
    "Change the overall UI theme (Dark, Light, or follow System preferences). Restart may be needed.": "更改整体UI主题（深色、浅色或遵循系统偏好）。可能需要重新启动。",
    "Color Theme:": "颜色主题：",
    "Change the primary accent color of the UI.": "更改UI的主要强调色。",
    "App Language:": "应用语言：",
    "Change the display language of the application. Restart may be needed.": "更改应用程序的显示语言。可能需要重新启动。",
    "GitHub API Token (Optional):": "GitHub API令牌（可选）：",
    "Enter your GitHub Personal Access Token (PAT) to increase rate limits or access private data (if token has permissions). Stored locally in settings.json.": "输入您的GitHub个人访问令牌（PAT）以增加速率限制或访问私有数据（如果令牌有权限）。本地存储在settings.json中。",
    "Use Token": "使用令牌",
    "If checked, the application will use the provided GitHub API token for all relevant GitHub requests.": "如果选中，应用程序将对所有相关的GitHub请求使用提供的GitHub API令牌。",
    "Check GitHub API Rate Limit": "检查GitHub API速率限制",
    "Check your current GitHub API rate limit status using the configured token (if enabled and set) or unauthenticated.": "使用配置的令牌（如果已启用并设置）或未经身份验证的方式检查您当前的GitHub API速率限制状态。",
    "N/A": "不适用",
    "GitHub API Rate Limit: Remaining/Total. Click button to update.": "GitHub API速率限制：剩余/总计。单击按钮以更新。",
    "On startup, check for new SDO versions": "启动时，检查新的SDO版本",
    "Automatically check for new SDO versions when the application starts.": "应用程序启动时自动检查新的SDO版本。",
    "Check for Updates Now": "现在检查更新",
    "Manually check for a new version of SDO.": "手动检查SDO的新版本。",
    "Current App Version: {app_version}": "当前应用程序版本：{app_version}",
    "Save General Settings": "保存常规设置",
    "Save all settings modified in this 'General Settings' tab.": "保存在此“常规设置”选项卡中修改的所有设置。",
    "GitHub token is not enabled or not set. Cannot check rate limit with token.": "GitHub令牌未启用或未设置。无法使用令牌检查速率限制。",
    "Unauthenticated Check?": "未经身份验证的检查？",
    "Do you want to check the unauthenticated GitHub rate limit (based on your IP)?": "您想检查未经身份验证的GitHub速率限制（基于您的IP）吗？",
    "Checking unauthenticated GitHub API rate limit...": "正在检查未经身份验证的GitHub API速率限制...",
    "Checking...": "正在检查...",
    "N/A (Token not set)": "不适用（令牌未设置）",
    "Checking GitHub API rate limit (using token)...": "正在检查GitHub API速率限制（使用令牌）...",
    "Token not available for authenticated check; using unauthenticated.": "令牌不可用于经过身份验证的检查；使用未经身份验证的方式。",
    "(Authenticated)": "（已通过身份验证）",
    "(Unauthenticated - IP Based)": "（未经身份验证 - 基于IP）",
    "GitHub API Rate Limit checked {auth_status_msg}.": "已检查GitHub API速率限制{auth_status_msg}。",
    "Could not retrieve detailed rate limit information from the response.": "无法从响应中检索详细的速率限制信息。",
    "Error: Data missing": "错误：数据缺失",
    "Failed to check rate limit (Status: {status}).": "检查速率限制失败（状态：{status}）。",
    "Error: Unauthorized. Check your GitHub API token and its permissions.": "错误：未经授权。检查您的GitHub API令牌及其权限。",
    "Error: Forbidden (403). You might have exceeded rate limits or triggered abuse detection.": "错误：禁止（403）。您可能已超过速率限制或触发了滥用检测。",
    "Error: Status {status}": "错误：状态{status}",
    "Error during GitHub rate limit check: {error}": "检查GitHub速率限制时出错：{error}",
    "Error: Network": "错误：网络",
    "Error decoding GitHub rate limit JSON response.": "解码GitHub速率限制JSON响应时出错。",
    "Error: JSON": "错误：JSON",
    "Unexpected error during GitHub rate limit check: {error}": "检查GitHub速率限制时出现意外错误：{error}",
    "Error: Unknown": "错误：未知",
    "Manage Repository List": "管理仓库列表",
    "Export Repositories to File": "将仓库导出到文件",
    "Save your current list of repositories (names and types) to a JSON file at a location you choose.": "将您当前的仓库列表（名称和类型）保存到您选择的位置的JSON文件中。",
    "Import Repositories from File": "从文件导入仓库",
    "Load a list of repositories from a JSON file. Imported repositories will be added to your current list if they don't already exist. Duplicates by name are ignored.": "从JSON文件加载仓库列表。导入的仓库如果尚不存在，将被添加到您的当前列表中。重复的名称将被忽略。",
    "Note: Importing will add new repositories from the file. It does not remove existing ones. Repository selection states are managed separately.": "注意：导入将从文件中添加新仓库。它不会删除现有仓库。仓库选择状态是单独管理的。",
    "Steam Depot Online (SDO) - Version: {version}\n": "Steam Depot Online (SDO) - 版本：{version}\n",
    "Developed by: ": "开发者：",
    "Contact (Telegram): ": "联系方式（Telegram）：",
    "Overview:": "概述：",
    "Steam Depot Online (SDO) is a tool designed to help users search for Steam games and download associated data from selected GitHub repositories. It primarily targets manifest files and decryption keys which can be used with Steam emulators or for archival purposes. The application offers different processing methods based on the type of repository ('Encrypted', 'Decrypted', 'Branch') and user settings like 'Strict Validation'.": "Steam Depot Online (SDO)是一个旨在帮助用户搜索Steam游戏并从选定的GitHub仓库下载相关数据的工具。它主要针对清单文件和解密密钥，这些密钥可用于Steam模拟器或存档目的。该应用程序根据仓库类型（“加密”、“解密”、“分支”）和用户设置（如“严格验证”）提供不同的处理方法。",
    "Successfully processed non-Branch downloads are zipped into:\n": "成功处理的非分支下载被压缩到：\n",
    "Branch type downloads are saved directly as downloaded .zip files to the same location.\n\n": "分支类型下载直接保存为下载的.zip文件到相同位置。\n\n",
    "Key Features:": "主要特点：",
    "- Add, manage, and delete GitHub repositories (owner/repo format).\n": "- 添加、管理和删除GitHub仓库（所有者/仓库格式）。\n",
    "- Categorize repositories as 'Encrypted', 'Decrypted', or 'Branch'.\n": "- 将仓库分类为“加密”、“解密”或“分支”。\n",
    "- Select multiple repositories for download attempts.\n": "- 选择多个仓库进行下载尝试。\n",
    "- Toggle 'Strict Validation' for non-Branch repositories to control file download and key handling.\n": "- 切换非分支仓库的“严格验证”以控制文件下载和密钥处理。\n",
    "- Search games by Name (uses Steam's full app list) or directly by AppID (uses Steam API for details).\n": "- 按名称搜索游戏（使用Steam的完整应用程序列表）或直接按AppID搜索（使用Steam API获取详情）。\n",
    "- Display game details including descriptions and images (requires Pillow library).\n": "- 显示游戏详情，包括描述和图像（需要Pillow库）。\n",
    "- Generate .lua scripts for common Steam emulators (for non-Branch types if keys are found).\n": "- 为常见的Steam模拟器生成.lua脚本（如果找到密钥，则适用于非分支类型）。\n",
    "- Batch download capability by entering multiple AppIDs.\n": "- 通过输入多个AppID实现批量下载功能。\n",
    "- View and manage downloaded zip files directly from the app.\n": "- 直接从应用程序中查看和管理下载的zip文件。\n",
    "- Theme and language customization.\n": "- 主题和语言自定义。\n",
    "- Optional GitHub API Token usage for increased rate limits.\n\n": "- 可选的GitHub API令牌用法以增加速率限制。\n\n",
    "1. Repository Types Explained:": "1. 仓库类型说明：",
    "   - Decrypted Repositories:": "   - 解密仓库：",
    " (Often preferred for ready-to-use data)\n     These repositories typically contain necessary decryption keys (e.g., in a `key.vdf` or `config.vdf` file). SDO attempts to extract these keys and download associated manifest files. The output is a tool-generated ZIP file containing the processed files and a .lua script.\n": "（通常优先用于即用型数据）\n     这些仓库通常包含必要的解密密钥（例如，在`key.vdf`或`config.vdf`文件中）。SDO尝试提取这些密钥并下载相关的清单文件。输出是一个工具生成的ZIP文件，包含处理后的文件和.lua脚本。\n",
    "   - Encrypted Repositories:": "   - 加密仓库：",
    "\n     These may host the latest game manifests, but decryption keys within their key files might be hashed, partial, or invalid for direct use. SDO will still attempt to process them, and a .lua script is generated (which could be minimal if no valid keys are found). The output is a tool-generated ZIP similar to Decrypted ones.\n": "\n     这些仓库可能托管最新的游戏清单，但其密钥文件中的解密密钥可能被哈希、部分或直接使用无效。SDO仍将尝试处理它们，并生成.lua脚本（如果未找到有效密钥，则可能是最小的）。输出是一个类似于解密仓库的工具生成的ZIP。\n",
    "   - Branch Repositories:": "   - 分支仓库：",
    " (Direct archive download)\n     For these repositories, SDO downloads a direct .zip archive of an entire AppID-named branch (e.g., a branch named '1245620') from GitHub. This downloaded .zip is saved *as is* to your output folder. No .lua script is generated by SDO, and no further zipping or file processing (like key extraction or manifest filtering) is performed by SDO for this type. 'Strict Validation' does not apply to Branch repositories.\n": "（直接存档下载）\n     对于这些仓库，SDO从GitHub下载整个AppID命名分支（例如，名为'1245620'的分支）的直接.zip存档。此下载的.zip按原样保存到您的输出文件夹。SDO不会为此类型生成.lua脚本，也不会进行进一步的压缩或文件处理（如密钥提取或清单过滤）。“严格验证”不适用于分支仓库。\n",
    "   *Recommendation for Playable Games:* Prioritize 'Decrypted' repositories if your goal is to use the data with an emulator. 'Branch' repositories provide raw game data zips which might be useful for archival, manual setup, or if you trust the source's packaging.\n": "   *可玩游戏的建议：* 如果您的目标是使用模拟器使用数据，请优先考虑“解密”仓库。'分支'仓库提供原始游戏数据zip，这些数据可能对存档、手动设置或如果您信任源的打包有用。\n",
    "   *For Latest Manifests (Advanced Users):* 'Encrypted' repositories might offer newer game files, but you may need to source valid decryption keys elsewhere if the repository itself doesn't provide usable ones.\n\n": "   *对于最新清单（高级用户）：* '加密'仓库可能提供更新的游戏文件，但如果仓库本身不提供可用的解密密钥，您可能需要从其他地方获取有效的解密密钥。\n\n",
    "2. 'Strict Validation' Checkbox:": "2. '严格验证'复选框：",
    "   - This setting applies ONLY to 'Encrypted' and 'Decrypted' (i.e., non-Branch) repository types.\n": "   - 此设置仅适用于“加密”和“解密”（即非分支）仓库类型。\n",
    "   - Checked (Default):": "   - 已选中（默认）：",
    " SDO requires a `key.vdf` or `config.vdf` to be present in the fetched GitHub branch data. It will prioritize downloading and parsing these key files. If valid decryption keys are found, associated `.manifest` files are also downloaded. The final tool-generated ZIP will *exclude* the `key.vdf`/`config.vdf` itself, as the keys are incorporated into the .lua script.\n": " SDO需要在获取的GitHub分支数据中存在`key.vdf`或`config.vdf`。它将优先下载和解析这些密钥文件。如果找到有效的解密密钥，还将下载相关的`.manifest`文件。最终的工具生成的ZIP将*排除*`key.vdf`/`config.vdf`本身，因为密钥已被合并到.lua脚本中。\n",
    "   - Unchecked:": "   - 未选中：",
    " SDO attempts to download all files from the fetched GitHub branch data. If `key.vdf`/`config.vdf` are present, they are parsed for keys. All downloaded files, *including* any `key.vdf`/`config.vdf`, WILL be included in the final tool-generated ZIP. This might be useful if you want the original key files for manual inspection or use with other tools.\n\n": " SDO尝试从获取的GitHub分支数据中下载所有文件。如果存在`key.vdf`/`config.vdf`，则会解析它们以获取密钥。所有下载的文件，包括任何`key.vdf`/`config.vdf`，都将包含在最终的工具生成的ZIP中。如果您想要原始密钥文件以进行手动检查或与其他工具一起使用，这可能会很有用。\n\n",
    "3. GitHub API Token:": "3. GitHub API令牌：",
    "   - You can add a GitHub Personal Access Token (PAT) in the General Settings.\n": "   - 您可以在常规设置中添加GitHub个人访问令牌（PAT）。\n",
    "   - If a token is provided and the 'Use Token' checkbox is enabled, SDO will use this token for all requests to the GitHub API (e.g., fetching branch information, file trees, and downloading branch zips via the API).\n": "   - 如果提供了令牌并且启用了“使用令牌”复选框，SDO将使用此令牌进行所有对GitHub API的请求（例如，获取分支信息、文件树以及通过API下载分支zip）。\n",
    "   - Using a token can significantly increase your API rate limit (from ~60 requests/hour per IP to ~5000 requests/hour per token) and may be required to access certain data or avoid public rate limits.\n": "   - 使用令牌可以显著增加您的API速率限制（从每个IP约60次请求/小时到每个令牌约5000次请求/小时），并且可能需要访问某些数据或避免公共速率限制。\n",
    "   - The token is stored locally in the `settings.json` file. Ensure this file is kept secure if you use a token with broad permissions.\n\n": "   - 令牌本地存储在`settings.json`文件中。如果您使用具有广泛权限的令牌，请确保此文件保持安全。\n\n",
    "4. Usage Workflow:": "4. 使用工作流程：",
    "   1. (Optional) Configure GitHub API Token in Settings if you have one.\n   2. Add GitHub repositories via 'Add Repo' (e.g., `SomeUser/SomeRepo`). Correctly select their type.\n   3. Select the checkboxes for repositories you wish to use for downloads.\n   4. Adjust 'Strict Validation' if needed for non-Branch downloads.\n   5. Enter a game name or AppID(s) and click 'Search'. (Wait for initial Steam app list load on first use if searching by name).\n   6. If searching a single game, select it from the results. Details will appear in the Progress panel.\n   7. Choose your download mode ('Selected game' or 'All AppIDs in input').\n   8. Click 'Download'. Monitor the Progress panel.\n\n": "   1. （可选）如果您有GitHub API令牌，请在设置中配置。\n   2. 通过“添加仓库”添加GitHub仓库（例如，`SomeUser/SomeRepo`）。正确选择它们的类型。\n   3. 选择您希望用于下载的仓库的复选框。\n   4. 如有必要，为非分支下载调整“严格验证”。\n   5. 输入游戏名称或AppID，然后单击“搜索”。（如果首次使用按名称搜索，请等待初始Steam应用程序列表加载。）\n   6. 如果搜索单个游戏，请从结果中选择它。详细信息将显示在“进度”面板中。\n   7. 选择您的下载模式（“选定的游戏”或“输入中的所有AppID”）。\n   8. 单击“下载”。监视“进度”面板。\n\n",
    "5. Potential Issues & Notes:": "5. 潜在问题和注意事项：",
    "   - Image Display: Game logos/headers require the Pillow library (`pip install Pillow`). If not installed, images won't appear in game details.\n": "   - 图像显示：游戏徽标/标头需要Pillow库（`pip install Pillow`）。如果未安装，图像将不会显示在游戏详情中。\n",
    "   - 'Content is still encrypted' (In-game error for non-Branch output): This means the game files were downloaded, but either valid decryption keys were not found/extracted by SDO, or they were not correctly applied by your emulator. Try a different 'Decrypted' repository, verify your emulator setup, or check if the game requires specific key handling.\n": "   - '内容仍然加密'（非分支输出的游戏内错误）：这意味着游戏文件已下载，但SDO未找到/提取有效的解密密钥，或者您的模拟器未正确应用它们。尝试不同的“解密”仓库，验证您的模拟器设置，或检查游戏是否需要特定的密钥处理。\n",
    "   - API Rate Limiting: Both GitHub and Steam APIs have rate limits. If you make too many requests in a short period, you might be temporarily blocked. Using a GitHub token helps with GitHub's limits. For Steam, limits are generally per-IP and less stringent for typical SDO usage.\n": "   - API速率限制：GitHub和Steam API都有速率限制。如果您在短时间内进行过多请求，可能会被临时阻止。使用GitHub令牌有助于GitHub的限制。对于Steam，限制通常是每个IP，并且对典型的SDO使用较不严格。\n",
    "   - Internet Connection: A stable internet connection is required for all online operations.\n": "   - 互联网连接：所有在线操作都需要稳定的互联网连接。\n",
    "   - Repository Availability: GitHub repositories can be removed or changed by their owners. What SDO can find depends on the content of the selected repositories at the time of download.\n\n": "   - 仓库可用性：GitHub仓库可以被其所有者删除或更改。SDO能找到什么取决于下载时所选仓库的内容。\n\n",
    "Download path updated to: {chosen_path}. Changes will be saved when you click 'Save General Settings'.": "下载路径已更新为：{chosen_path}。单击“保存常规设置”时将保存更改。",
    "Select Download Folder": "选择下载文件夹",
    "Appearance mode set to: {new_appearance_mode_display}. Some changes may require a restart to fully apply.": "外观模式设置为：{new_appearance_mode_display}。某些更改可能需要重新启动才能完全应用。",
    "Appearance Mode Change": "外观模式更改",
    "Appearance mode changed to {new_appearance_mode_display}. A restart might be needed for all UI elements to update correctly.": "外观模式已更改为{new_appearance_mode_display}。可能需要重新启动以便所有UI元素正确更新。",
    "Color theme set to: {new_color_theme}. A restart might be needed for all elements to reflect the new theme.": "颜色主题设置为：{new_color_theme}。可能需要重新启动以便所有元素反映新主题。",
    "Color Theme Change": "颜色主题更改",
    "Color theme changed to {new_color_theme}. Please restart the application for changes to fully apply to all UI components.": "颜色主题已更改为{new_color_theme}。请重新启动应用程序以便更改完全应用于所有UI组件。",
    "Language changed to {new_language_display_name}. Some elements might require an application restart to fully update.": "语言已更改为{new_language_display_name}。某些元素可能需要重新启动应用程序才能完全更新。",
    "Language Change": "语言更改",
    "Language has been changed to {new_language_display_name}. A restart is recommended for all changes to take effect.": "语言已更改为{new_language_display_name}。建议重新启动以便所有更改生效。",
    "Language is already set to {new_language_display_name}.": "语言已设置为{new_language_display_name}。",
    "Could not set language. '{new_language_display_name}' not recognized.": "无法设置语言。'{new_language_display_name}'未被识别。",
    "Invalid download path: {path}\nError: {error}\nPath not saved.": "无效的下载路径：{path}\n错误：{error}\n未保存路径。",
    "Failed to save download path: {new_download_path}. Error: {e}": "保存下载路径失败：{new_download_path}。错误：{e}",
    "General settings saved successfully.": "常规设置已成功保存。",
    "Settings Saved": "设置已保存",
    "General settings have been saved.": "常规设置已保存。",
    "Checking for SDO updates...": "正在检查SDO更新...",
    "A new version of SDO ({latest_version}) is available! Your current version is {current_version}.\n\nDownload from: {release_url}": "SDO的新版本（{latest_version}）可用！您的当前版本是{current_version}。\n\n从以下位置下载：{release_url}",
    "Update Available!": "有可用更新！",
    "Update check completed. You are using the latest version ({current_version}).": "更新检查已完成。您正在使用最新版本（{current_version}）。",
    "Could not compare versions. Current: {current_version}, Latest fetched: {latest_version_tag_raw}.": "无法比较版本。当前：{current_version}，最新获取：{latest_version_tag_raw}。",
    "Failed to check for updates (HTTP Error {status}): {error_message}": "检查更新失败（HTTP错误{status}）：{error_message}",
    "Network error while checking for updates: {error}": "检查更新时出现网络错误：{error}",
    "Failed to decode update information from GitHub.": "从GitHub解码更新信息失败。",
    "An unexpected error occurred while checking for updates: {error}": "检查更新时发生意外错误：{error}",
    "Select destination to export repositories.json": "选择导出repositories.json的目标位置",
    "JSON files": "JSON文件",
    "Repositories exported successfully to: {filepath}": "仓库已成功导出到：{filepath}",
    "Export Successful": "导出成功",
    "Repositories exported to:\n{filepath}": "仓库已导出到：\n{filepath}",
    "Failed to export repositories: {e}": "导出仓库失败：{e}",
    "Failed to export repositories to {filepath}: {e}": "导出仓库到{filepath}失败：{e}",
    "Select repositories.json file to import": "选择要导入的repositories.json文件",
    "Import Error": "导入错误",
    "File not found or empty: {filepath}": "找不到文件或文件为空：{filepath}",
    "Import Warning": "导入警告",
    "File {filepath} is empty or does not contain valid repository data.": "文件{filepath}为空或不包含有效的仓库数据。",
    "Successfully imported {newly_added_count} new repositories from: {filepath}.": "已成功从{filepath}导入{newly_added_count}个新仓库。",
    "Skipped {skipped_duplicates_count} duplicates.": "跳过{skipped_duplicates_count}个重复项。",
    "Import Successful": "导入成功",
    "{newly_added_count} new repositories imported. ": "已导入{newly_added_count}个新仓库。",
    "{skipped_duplicates_count} duplicates were skipped.": "跳过了{skipped_duplicates_count}个重复项。",
    "\nPlease review the repository list.": "\n请查看仓库列表。",
    "Import complete. No new repositories were added from {filepath} as they already exist (checked by name).": "导入完成。未从{filepath}添加新仓库，因为它们已存在（按名称检查）。",
    "Import Information": "导入信息",
    "No new repositories were added. All repositories in the file already exist in your list.": "未添加新仓库。文件中的所有仓库已存在于您的列表中。",
    "Import from {filepath} resulted in no changes to the repository list.": "从{filepath}导入未导致仓库列表发生任何更改。",
    "Failed to import repositories from {filepath}: {e}": "从{filepath}导入仓库失败：{e}",
    "Warning: Language directory '{lang_dir}' not found. Created an empty one. Please add translation files.": "警告：找不到语言目录'{lang_dir}'。已创建一个空目录。请添加翻译文件。",
    "Error loading language file {filename}: {e}": "加载语言文件{filename}时出错：{e}",
    "Warning: No translation files found in '{lang_dir}' directory. Using default English keys.": "警告：在'{lang_dir}'目录中未找到翻译文件。使用默认英文键。",
    "Language '{lang_code}' not found.": "找不到语言'{lang_code}'。",
    "Refresh List": "刷新列表",
    "Scan the download folder for zipped outcomes and update the list.": "扫描下载文件夹中的压缩结果并更新列表。",
    "Scanning downloaded manifests...": "正在扫描已下载的清单...",
    "Download path '{download_path}' does not exist.": "下载路径'{download_path}'不存在。",
    "Download folder not found or configured incorrectly.": "找不到下载文件夹或配置不正确。",
    "Error scanning downloaded manifests: {e}": "扫描已下载的清单时出错：{e}",
    "Error scanning folder: {e}": "扫描文件夹时出错：{e}",
    "No downloaded manifests found.": "未找到已下载的清单。",
    "Found {count} downloaded manifests.": "找到{count}个已下载的清单。",
    "Game Name": "游戏名称",
    "AppID": "AppID",
    "Action": "操作",
    "ZIP": "ZIP",
    "Open the zip file '{filename}'": "打开zip文件'{filename}'",
    "Tab '{current_progress_tab_name}' not found for renaming.": "找不到要重命名的选项卡'{current_progress_tab_name}'。",
    "Error renaming progress tab from '{current_progress_tab_name}' to '{target_progress_tab_title}': {e}": "将进度选项卡从'{current_progress_tab_name}'重命名为'{target_progress_tab_title}'时出错：{e}",
    "Tab '{current_downloaded_tab_name}' not found for renaming.": "找不到要重命名的选项卡'{current_downloaded_tab_name}'。",
    "Error renaming downloaded tab from '{current_downloaded_tab_name}' to '{target_downloaded_tab_title}': {e}": "将下载的选项卡从'{current_downloaded_tab_name}'重命名为'{target_downloaded_tab_title}'时出错：{e}",
    "Error setting active tab to '{current_progress_tab_name}': {e}": "将活动选项卡设置为'{current_progress_tab_name}'时出错：{e}"
}
